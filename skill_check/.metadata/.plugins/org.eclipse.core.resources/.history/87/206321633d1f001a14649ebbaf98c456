package programmers;
import java.util.*;
public class prgmers_49189 {
	public static int solution(int n, int[][] edge) {
        int answer = 0, last = -1;
        ArrayList<ArrayList<Integer>> list = new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer>[] arr = new ArrayList[n+1];
        int[] vst = new int [n+1];
        for(int[] arr : edge) map[arr[0]][arr[1]] = map[arr[1]][arr[0]] = 1;
        Queue<int[]> q = new LinkedList<>();
        q.add(new int [] {1, 0});
        while(!q.isEmpty()) {
        	int[] arr = q.poll();
        	if(last != arr[1]) {
        		last = arr[1];
        		answer = 1;
        	}else {
        		answer++;
        	}
        	
        	for(int i = 1; i < n + 1; i++) {
        		if(map[arr[0]][i] == 1 && vst[i] == 0) {
        			map[arr[0]][i] = map[i][arr[0]] = 0;
        			vst[i] = 1;
        			q.add(new int [] {i, arr[1] + 1});
        		}
        	}
        }
        
        return answer;
    }
	public static void main(String[] args) {
		int[][] arr = new int [][] {{3, 6}, {4, 3}, {3, 2}, {1, 3}, {1, 2}, {2, 4}, {5, 2}};
		System.out.println(solution(6, arr));
	}

}
